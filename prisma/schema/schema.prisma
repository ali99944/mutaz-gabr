// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["prismaSchemaFolder"]

}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Client {
  id Int @id @default(autoincrement())
  name String
  phone_number String
  email String

  ratings ServiceRate[]
  contact_messages ContactMessage[]
}


model Category {
  id Int @id @default(autoincrement())
  name String
  created_at String

  services Service[]
  consultations FreeConsultation[]
}

model ServiceImage {
  id Int @id @default(autoincrement())
  name String
  path String
  is_main_image Boolean @default(false)
  created_at String

  service_id Int
  service Service @relation(fields: [service_id], references: [id])
}

model ServiceWorkingStep {
  id Int @id @default(autoincrement())
  service_id Int
  service Service @relation(fields: [service_id], references: [id])

  name String
  description String
}

model ServiceFeature {
  id Int @id @default(autoincrement())
  service_id Int
  service Service @relation(fields: [service_id], references: [id])

}

model ServiceRate {
  id Int @id @default(autoincrement())
  service_id Int
  service Service @relation(fields: [service_id], references: [id])

  client_id Int
  client Client @relation(fields: [client_id], references: [id])
}

model Service {
  id Int @id @default(autoincrement())
  name String
  category_id Int
  category Category @relation(fields: [category_id], references: [id])

  description String

  images ServiceImage[]
  features ServiceFeature[]
  working_steps ServiceWorkingStep[]
  ratings ServiceRate[]

}

model ProjectSpecification {
  id Int @id @default(autoincrement())
  name String
  value String

  project_id Int
  project Project[]
}

model ProjectImage {
  id Int @id @default(autoincrement())
  name String
  path String

  is_main_image Boolean @default(false)

  project_id Int
  project Project @relation(fields: [project_id], references: [id])
}

model ProjectDesignModel {
  id Int @id @default(autoincrement())
  name String
  projects Project[]
}

model ProjectExecutionSteps {
  id Int @id @default(autoincrement())
  name String
  description String

  project_id Int
  project Project @relation(fields: [project_id], references: [id])
}

model ClientProjectRate {
  id Int @id @default(autoincrement())
  project Project?
}

model Project {
  id Int @id @default(autoincrement())
  name String
  description String
  execution_date String
  execution_duration Int
  space_in_m2 Int

  specifications ProjectSpecification[]
  images ProjectImage[]
  execution_steps ProjectExecutionSteps[]

  design_model_id Int
  design_model ProjectDesignModel @relation(fields: [design_model_id], references: [id])

  client_project_rate_id Int? @unique
  client_project_rate ClientProjectRate? @relation(fields: [client_project_rate_id], references: [id])
  created_at String
}

model Gallery {
  id Int @id @default(autoincrement())
}

enum ConsultationStatus {
  closed
  pending
}

model FreeConsultation {
  id Int @id @default(autoincrement())
  full_name String
  email String
  phone_number String
  details String
  status ConsultationStatus @default(pending)
  requested_at String

  category_id Int
  category Category @relation(fields: [category_id], references: [id])
}